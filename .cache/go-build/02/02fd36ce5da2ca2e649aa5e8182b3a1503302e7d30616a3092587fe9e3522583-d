// Code generated by cmd/cgo; DO NOT EDIT.

//line /mnt/c/Users/M. Saif/yay/src/gopath/pkg/mod/github.com/!jguer/go-alpm/v2@v2.1.2/version.go:1:1
package alpm

// #include <alpm.h>
import _ "unsafe"
import "unsafe"

// VerCmp performs version comparison according to Pacman conventions. Return
// value is <0 if and only if v1 is older than v2.
func VerCmp(v1, v2 string) int {
	c1 := ( /*line :10:8*/_Cfunc_CString /*line :10:16*/)(v1)
	c2 := ( /*line :11:8*/_Cfunc_CString /*line :11:16*/)(v2)

	defer func() func() { _cgo0 := /*line :13:15*/unsafe.Pointer(c1); return func() { _cgoCheckPointer(_cgo0, nil); /*line :13:34*/_Cfunc_free(_cgo0); }}()()
	defer func() func() { _cgo0 := /*line :14:15*/unsafe.Pointer(c2); return func() { _cgoCheckPointer(_cgo0, nil); /*line :14:34*/_Cfunc_free(_cgo0); }}()()

	result := ( /*line :16:12*/_Cfunc_alpm_pkg_vercmp /*line :16:28*/)(c1, c2)

	return int(result)
}
