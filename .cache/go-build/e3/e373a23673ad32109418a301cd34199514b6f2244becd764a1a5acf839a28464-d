// Code generated by cmd/cgo; DO NOT EDIT.

//line /mnt/c/Users/M. Saif/yay/src/gopath/pkg/mod/github.com/!jguer/go-alpm/v2@v2.1.2/db_six.go:1:1
//go:build !next
// +build !next

// db.go - Functions for database handling.
//
// Copyright (c) 2013 The go-alpm Authors
//
// MIT Licensed. See LICENSE for details.

package alpm

/*
#include <alpm.h>
#include <alpm_list.h>
*/
import _ "unsafe"

import (
	"unsafe"
)

// PkgCachebyGroup returns a PackageList of packages belonging to a group
func (l DBList) FindGroupPkgs(name string) IPackageList {
	cName := ( /*line :24:11*/_Cfunc_CString /*line :24:19*/)(name)

	defer func() func() { _cgo0 := /*line :26:15*/unsafe.Pointer(cName); return func() { _cgoCheckPointer(_cgo0, nil); /*line :26:37*/_Cfunc_free(_cgo0); }}()()

	pkglist := (* /*line :28:15*/_Ctype_struct___alpm_list_t /*line :28:37*/)(unsafe.Pointer(l.list))
	pkgcache := (*list)(unsafe.Pointer(func() *_Ctype_struct___alpm_list_t{ _cgo0 := /*line :29:60*/pkglist; var _cgo1 *_Ctype_char = /*line :29:69*/cName; _cgoCheckPointer(_cgo0, nil); return /*line :29:75*/_Cfunc_alpm_find_group_pkgs(_cgo0, _cgo1); }()))

	return PackageList{pkgcache, l.handle}
}
